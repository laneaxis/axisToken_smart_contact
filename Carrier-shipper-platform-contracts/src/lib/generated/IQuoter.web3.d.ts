/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from "bn.js";
import { ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract
} from "./types";

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export interface IQuoter extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): IQuoter;
  clone(): IQuoter;
  methods: {
    /**
     * Returns the amount out received for a given exact input swap without executing the swap
     * @param amountIn The amount of the first token to swap
     * @param path The path of the swap, i.e. each token pair and the pool fee
     */
    quoteExactInput(
      path: string | number[],
      amountIn: number | string | BN
    ): NonPayableTransactionObject<string>;

    /**
     * Returns the amount out received for a given exact input but for a swap of a single pool
     * @param amountIn The desired input amount
     * @param fee The fee of the token pool to consider for the pair
     * @param sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap
     * @param tokenIn The token being swapped in
     * @param tokenOut The token being swapped out
     */
    quoteExactInputSingle(
      tokenIn: string,
      tokenOut: string,
      fee: number | string | BN,
      amountIn: number | string | BN,
      sqrtPriceLimitX96: number | string | BN
    ): NonPayableTransactionObject<string>;

    /**
     * Returns the amount in required for a given exact output swap without executing the swap
     * @param amountOut The amount of the last token to receive
     * @param path The path of the swap, i.e. each token pair and the pool fee
     */
    quoteExactOutput(
      path: string | number[],
      amountOut: number | string | BN
    ): NonPayableTransactionObject<string>;

    /**
     * Returns the amount in required to receive the given exact output amount but for a swap of a single pool
     * @param amountOut The desired output amount
     * @param fee The fee of the token pool to consider for the pair
     * @param sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap
     * @param tokenIn The token being swapped in
     * @param tokenOut The token being swapped out
     */
    quoteExactOutputSingle(
      tokenIn: string,
      tokenOut: string,
      fee: number | string | BN,
      amountOut: number | string | BN,
      sqrtPriceLimitX96: number | string | BN
    ): NonPayableTransactionObject<string>;
  };
  events: {
    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };
}
