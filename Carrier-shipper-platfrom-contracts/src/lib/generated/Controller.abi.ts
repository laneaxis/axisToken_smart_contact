/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { AbiItem } from "web3-utils";
export const Abi = [
  {
    inputs: [
      { internalType: "address[]", name: "owners_", type: "address[]" },
      { internalType: "address", name: "feeToken_", type: "address" },
      { internalType: "address", name: "paymentToken_", type: "address" },
      {
        components: [
          { internalType: "uint256", name: "mantissa", type: "uint256" }
        ],
        internalType: "struct AttoDecimal.Instance",
        name: "fee_",
        type: "tuple"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          { internalType: "uint256", name: "mantissa", type: "uint256" }
        ],
        indexed: false,
        internalType: "struct AttoDecimal.Instance",
        name: "fee",
        type: "tuple"
      }
    ],
    name: "FeeUpdated",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address"
      },
      { indexed: true, internalType: "address", name: "to", type: "address" },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "FeeWithdrawed",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "uint256", name: "id", type: "uint256" },
      {
        indexed: true,
        internalType: "address",
        name: "shipper",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "carrier",
        type: "address"
      },
      { indexed: true, internalType: "address", name: "order", type: "address" }
    ],
    name: "OrderCreated",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "order", type: "address" }
    ],
    name: "OrderLocked",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "order",
        type: "address"
      },
      {
        components: [
          { internalType: "uint256", name: "mantissa", type: "uint256" }
        ],
        indexed: false,
        internalType: "struct AttoDecimal.Instance",
        name: "penalty",
        type: "tuple"
      }
    ],
    name: "OrderUnlocked",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnerAdded",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      }
    ],
    name: "OwnerRemoved",
    type: "event"
  },
  {
    inputs: [
      { internalType: "address[]", name: "newOwners", type: "address[]" }
    ],
    name: "addOwners",
    outputs: [{ internalType: "bool", name: "success", type: "bool" }],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "owners",
    outputs: [
      { internalType: "address[]", name: "owners_", type: "address[]" }
    ],
    stateMutability: "view",
    type: "function",
    constant: true
  },
  {
    inputs: [],
    name: "ownersCount",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
    constant: true
  },
  {
    inputs: [
      { internalType: "address[]", name: "previousOwners", type: "address[]" }
    ],
    name: "removeOwners",
    outputs: [{ internalType: "bool", name: "success", type: "bool" }],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "feeToken",
    outputs: [{ internalType: "contract IERC20", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
    constant: true
  },
  {
    inputs: [],
    name: "feeTokenBalance",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
    constant: true
  },
  {
    inputs: [],
    name: "paymentToken",
    outputs: [{ internalType: "contract IERC20", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
    constant: true
  },
  {
    inputs: [],
    name: "paymentTokenBalance",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
    constant: true
  },
  {
    inputs: [
      { internalType: "bytes32", name: "salt", type: "bytes32" },
      { internalType: "uint256", name: "id", type: "uint256" },
      { internalType: "address", name: "shipper", type: "address" },
      { internalType: "address", name: "carrier", type: "address" },
      {
        components: [
          { internalType: "uint256", name: "mantissa", type: "uint256" }
        ],
        internalType: "struct AttoDecimal.Instance",
        name: "fee_",
        type: "tuple"
      }
    ],
    name: "computeOrderAddress",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
    constant: true
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "mantissa", type: "uint256" }
        ],
        internalType: "struct AttoDecimal.Instance",
        name: "",
        type: "tuple"
      }
    ],
    stateMutability: "view",
    type: "function",
    constant: true
  },
  {
    inputs: [{ internalType: "address", name: "order", type: "address" }],
    name: "locked",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
    constant: true
  },
  {
    inputs: [{ internalType: "address", name: "order", type: "address" }],
    name: "shipperDistribution",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "mantissa", type: "uint256" }
        ],
        internalType: "struct AttoDecimal.Instance",
        name: "",
        type: "tuple"
      }
    ],
    stateMutability: "view",
    type: "function",
    constant: true
  },
  {
    inputs: [
      { internalType: "bytes32", name: "salt", type: "bytes32" },
      { internalType: "uint256", name: "id", type: "uint256" },
      { internalType: "address", name: "shipper", type: "address" },
      { internalType: "address", name: "carrier", type: "address" },
      {
        components: [
          { internalType: "uint256", name: "mantissa", type: "uint256" }
        ],
        internalType: "struct AttoDecimal.Instance",
        name: "fee_",
        type: "tuple"
      }
    ],
    name: "createOrder",
    outputs: [{ internalType: "address", name: "addr", type: "address" }],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [{ internalType: "address", name: "order", type: "address" }],
    name: "lock",
    outputs: [{ internalType: "bool", name: "success", type: "bool" }],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      { internalType: "address", name: "order", type: "address" },
      {
        components: [
          { internalType: "uint256", name: "mantissa", type: "uint256" }
        ],
        internalType: "struct AttoDecimal.Instance",
        name: "penalty",
        type: "tuple"
      },
      { internalType: "bytes32", name: "salt", type: "bytes32" },
      { internalType: "uint256", name: "id", type: "uint256" },
      { internalType: "address", name: "shipper", type: "address" },
      { internalType: "address", name: "carrier", type: "address" },
      {
        components: [
          { internalType: "uint256", name: "mantissa", type: "uint256" }
        ],
        internalType: "struct AttoDecimal.Instance",
        name: "fee_",
        type: "tuple"
      }
    ],
    name: "unlock",
    outputs: [{ internalType: "address", name: "addr", type: "address" }],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          { internalType: "uint256", name: "mantissa", type: "uint256" }
        ],
        internalType: "struct AttoDecimal.Instance",
        name: "fee_",
        type: "tuple"
      }
    ],
    name: "updateFee",
    outputs: [{ internalType: "bool", name: "success", type: "bool" }],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "amount", type: "uint256" }
    ],
    name: "withdrawFeeTokenFees",
    outputs: [{ internalType: "bool", name: "success", type: "bool" }],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "amount", type: "uint256" }
    ],
    name: "withdrawPaymentTokenFees",
    outputs: [{ internalType: "bool", name: "success", type: "bool" }],
    stateMutability: "nonpayable",
    type: "function"
  }
] as AbiItem[];
