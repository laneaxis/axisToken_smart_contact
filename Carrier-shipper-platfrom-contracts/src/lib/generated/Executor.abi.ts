/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { AbiItem } from "web3-utils";
export const Abi = [
  {
    inputs: [
      { internalType: "address[]", name: "owners_", type: "address[]" },
      { internalType: "address", name: "axisToken_", type: "address" },
      { internalType: "address", name: "sUsdcToken_", type: "address" },
      { internalType: "address", name: "usdcToken_", type: "address" },
      { internalType: "address", name: "uniswapQuoter_", type: "address" },
      { internalType: "address", name: "uniswapRouter_", type: "address" },
      { internalType: "uint256", name: "sUSDCPerLoad_", type: "uint256" }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256"
      }
    ],
    name: "LoadPriceUpdated",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "loadsAmount",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sUsdcAmount",
        type: "uint256"
      }
    ],
    name: "LoadsPurchased",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnerAdded",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      }
    ],
    name: "OwnerRemoved",
    type: "event"
  },
  {
    inputs: [],
    name: "_axisToken",
    outputs: [{ internalType: "contract IERC20", name: "", type: "address" }],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "_ethToken",
    outputs: [{ internalType: "contract IERC20", name: "", type: "address" }],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "_sUsdcToken",
    outputs: [{ internalType: "contract SUSDC", name: "", type: "address" }],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "_uniswapQuoter",
    outputs: [{ internalType: "contract IQuoter", name: "", type: "address" }],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "_uniswapRouter",
    outputs: [
      { internalType: "contract ISwapRouter", name: "", type: "address" }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "_usdcToken",
    outputs: [{ internalType: "contract IERC20", name: "", type: "address" }],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      { internalType: "address[]", name: "newOwners", type: "address[]" }
    ],
    name: "addOwners",
    outputs: [{ internalType: "bool", name: "success", type: "bool" }],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "buyLoadsFactor",
    outputs: [{ internalType: "uint256", name: "mantissa", type: "uint256" }],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owners",
    outputs: [
      { internalType: "address[]", name: "owners_", type: "address[]" }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "ownersCount",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      { internalType: "address[]", name: "previousOwners", type: "address[]" }
    ],
    name: "removeOwners",
    outputs: [{ internalType: "bool", name: "success", type: "bool" }],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "swapFee",
    outputs: [{ internalType: "uint24", name: "", type: "uint24" }],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "swapSqrtPriceLimitX96",
    outputs: [{ internalType: "uint160", name: "", type: "uint160" }],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [{ internalType: "bytes16", name: "id", type: "bytes16" }],
    name: "isPaymentHandled",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [{ internalType: "bytes16", name: "id", type: "bytes16" }],
    name: "isPayoutHandled",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      { internalType: "address", name: "tokenIn", type: "address" },
      { internalType: "address", name: "tokenOut", type: "address" },
      { internalType: "uint24", name: "fee", type: "uint24" },
      { internalType: "uint256", name: "amountIn", type: "uint256" },
      { internalType: "uint160", name: "sqrtPriceLimitX96", type: "uint160" }
    ],
    name: "priceInput",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      { internalType: "address", name: "tokenIn", type: "address" },
      { internalType: "address", name: "tokenOut", type: "address" },
      { internalType: "uint24", name: "fee", type: "uint24" },
      { internalType: "uint256", name: "amountOut", type: "uint256" },
      { internalType: "uint160", name: "sqrtPriceLimitX96", type: "uint160" }
    ],
    name: "priceOutput",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "getLoadPrice",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      { internalType: "bytes16", name: "id", type: "bytes16" },
      { internalType: "address", name: "account", type: "address" },
      { internalType: "uint256", name: "amount", type: "uint256" }
    ],
    name: "handlePayment",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      { internalType: "bytes16", name: "id", type: "bytes16" },
      { internalType: "address", name: "account", type: "address" },
      { internalType: "uint256", name: "amount", type: "uint256" }
    ],
    name: "handlePayout",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      { internalType: "address", name: "account", type: "address" },
      { internalType: "uint256", name: "amountOut", type: "uint256" }
    ],
    name: "swapSUSDCToEth",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      { internalType: "address", name: "account", type: "address" },
      { internalType: "uint256", name: "amountIn", type: "uint256" }
    ],
    name: "swapSUSDCToAXIS",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      { internalType: "address", name: "account", type: "address" },
      { internalType: "uint256", name: "amountIn", type: "uint256" }
    ],
    name: "swapAXISToSUSDC",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      { internalType: "address", name: "payer", type: "address" },
      { internalType: "address", name: "order", type: "address" },
      { internalType: "uint256", name: "sUsdcAmount", type: "uint256" },
      { internalType: "uint256", name: "axisAmount", type: "uint256" }
    ],
    name: "payOrder",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      { internalType: "address", name: "account", type: "address" },
      { internalType: "uint256", name: "loadsAmount", type: "uint256" }
    ],
    name: "buyLoads",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [{ internalType: "uint256", name: "newPrice", type: "uint256" }],
    name: "setLoadPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
] as AbiItem[];
